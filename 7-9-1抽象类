-抽象方法
   -没有具体实现内容的方法
   -抽象方法的作用：规范子类的行为和端口，设定类的标准，以便于开发的时候具有统一的标准
   -抽象类的使用需要引入模块abc
       import abc
-抽象类(metaclass)
   -包含抽象方法的类，通常称为ABC类
   -抽象类的实现
   -抽象类可以包含抽象方法也可以包含具体方法
   -抽象类中可以包含方法和属性
   --抽象类不允许直接实例化，必须继承才能实现，且继承的子类必需实现所有继承的抽象方法，如果子类没有实现所有继承来的抽象方法，则子类也不能实例化
       #声明一个类并制定当前类为抽象类提供的元类
       #声明一个类并指定当前类的元类
      class human(metaclass=abc.ABCmeta)==>固定申明
         #定义一个抽象方法
         @abc.abstractmethod（定义前指定方法形式）
         def smorking(self):
            pass
         #定义一个类抽象方法
         @abc.abstractclassmethod
         def drink(cls):
            pass
         定义一个静态抽象方法
         @abc.abstractstaticmethod
         def say():
            pass
         
